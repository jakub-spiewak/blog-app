/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, {useEffect, useMemo, useRef} from 'react'
import {useAnimations, useGLTF} from '@react-three/drei'
import {GLTF} from 'three-stdlib'

type GLTFResult = GLTF & {
    nodes: {
        Mesh_0: THREE.SkinnedMesh
        Mesh_1: THREE.SkinnedMesh
        Mesh_2: THREE.SkinnedMesh
        Root4: THREE.Bone
    }
    materials: {}
}


export const ASTRONAUT_COLOR = "#232e44"
type ActionName = 'floating' | 'idle' | 'moon_walk' | 'wave'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export default function Model() {
    const group = useRef<THREE.Group>(null)
    const {nodes, animations} = useGLTF('/astronaout.gltf') as GLTFResult
    const {actions} = useAnimations(animations, group)

    useEffect(() => {
        actions.moon_walk?.play()
    }, [])

    useEffect(() => {
            let isWaving = false
            const onClick = () => {
                if (isWaving) return
                isWaving = true

                actions.wave?.reset().fadeIn(0.5).play()
                actions.moon_walk?.fadeOut(2.5)
                const timeoutId = setTimeout(() => {
                    actions.wave?.fadeOut(1)
                    actions.moon_walk?.reset().fadeIn(1)
                    isWaving = false
                    clearTimeout(timeoutId)
                }, 3000)
            }
            window.addEventListener("click", onClick, false)
        }, []
    )

    const material = useMemo(() => new THREE.MeshStandardMaterial({color: ASTRONAUT_COLOR}), [])

    return (
        <group ref={group} dispose={null}>
            <group
                scale={0.02}
                position={[0, -2, 0]}
            >
                <primitive object={nodes.Root4}/>
                <skinnedMesh
                    material={material}
                    geometry={nodes.Mesh_0.geometry}
                    skeleton={nodes.Mesh_0.skeleton}
                />
                {/*<skinnedMesh*/}
                {/*    // material={material}*/}
                {/*    geometry={nodes.Mesh_1.geometry}*/}
                {/*    skeleton={nodes.Mesh_1.skeleton}*/}
                {/*/>*/}
                <skinnedMesh
                    // material={material}
                    geometry={nodes.Mesh_2.geometry}
                    skeleton={nodes.Mesh_2.skeleton}
                />
            </group>
        </group>
    )
}

useGLTF.preload('/astronaout.gltf')
